<?xml version="1.0"?>

<!--
 Copyright 2004 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->

<project name="samples" basedir=".." default="compile">

    <description>
        Sample Apps Sub-Project
        =======================
        
        Automated sample app generation.  Meta files that describe each
        sample app are used to generate Ant build.xml files, test, etc.
    </description>
    
    <!-- import build properties -->
    <property file="${basedir}/build.properties" />
    
    <!-- this property controls how the stylesheet generates classpath
         information in the sample build.xml files.  Legal values are: 
         
             'workspace' - samples can be run from samples/samples-src/...
             'RI' - samples can be run from dist/samples/...
             'JWSDP' - sample can be run from $JWSDP_HOME/jaxb/samples/...
             
         during regular workspace builds, this property will default to
         'workspace' so the sample can be run in place.
    -->
    <property name="samples.target" value="workspace"/>
    <property environment="env"/>

    <!-- setup classpath -->
    <path id="classpath">
        <pathelement path="." />
        <pathelement path="${samples.classes}" />
        <pathelement path="${runtime-api.classes}" />
        <fileset dir="${jaxb.libs}" includes="**/*.jar"/>
        <pathelement path="${test.classes}" />
        <pathelement location="${env.JAVA_HOME}/lib/tools.jar"/>
    </path>

    <!-- compile Java source files -->
    <target name="compile" description="compile sample app processor code">
        <mkdir dir="${samples.classes}" />
        <javac srcdir="${samples.src}" destdir="${samples.classes}"
            debug="${compile.debug}" optimize="${compile.optimize}"
            deprecation="${compile.deprecation}" >
            <classpath refid="classpath"/>
        </javac>
        <!-- copy other resources into build dir -->
        <copy toDir="${samples.classes}">
            <fileset dir="${samples.src}" includes="**/*.xsl" />
            <fileset dir="${samples.src}" includes="**/*.rnc" />
        </copy>
    </target>

    <dirset dir="${samples.samples-src}">
        <exclude name="**/CVS"/>
    </dirset>
    
    <!-- run the sample app processors -->
    <target name="generate-samples" depends="process-samples" description="generate build.xml into the samples-src directory."/>
    <target name="process-samples" depends="compile">
        <property name="samples.work" value="${samples.root}/work" />
        <delete dir="${samples.work}"/>
        <mkdir dir="${samples.work}" />

        <java classname="processor.SampleProcessorDriver" fork="true" failonerror="true">
            <classpath refid="classpath" />
            <arg line="-dir ${samples.samples-src}" />
            <arg line="-work ${samples.work}" />
            <arg value="-validating" />
            <arg line="-ant ${samples.target}" />
            <!--jvmarg value="-Xdebug" /-->
            <!--jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,address=8000" /-->
        </java>
    </target>

    <!-- run each of the sample apps and compare the output to the expected results -->
    <target name="test-samples" depends="clean, compile"
            description="run each of the samples and report pass/fail results">
        <property name="samples.work" value="${samples.root}/work" />
        <delete dir="${samples.work}"/>
        <mkdir dir="${samples.work}" />

        <java classname="processor.SampleProcessorDriver" fork="true" failonerror="true">
            <classpath refid="classpath" />
            <jvmarg line="-Xmx512m" />
            <arg line="-dir ${samples.samples-src}" />
            <arg line="-work ${samples.work}" />
            <arg value="-validating" />
            <arg value="-execute" />
            <arg value="-verbose" />
            <arg line="-ant ${samples.target}" />
        </java>
    </target>
    
    <!-- remove all intermediate files -->
    <target name="clean" depends="clean-samples" description="clean generated artifacts"/>
    <target name="clean-samples">
        <delete dir="${samples.build}" />
        <!-- clean generated artifacts from test runs under samples-src/* -->
        <delete includeemptydirs="true" >
            <fileset dir="${samples.samples-src}" includes="**/build.xml"/>
            <!--fileset dir="${samples.samples-src}" includes="**/gen-src/**/*"/-->
            <fileset dir="${samples.samples-src}" includes="**/gen-src/"/>
            <fileset dir="${samples.samples-src}" includes="**/classes/"/>
            <fileset dir="${samples.samples-src}" includes="**/build.out"/>
        </delete>
        <delete dir="${samples.root}/work"/>
    </target>


</project>
