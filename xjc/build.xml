<?xml version="1.0"?>

<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the "License").  You may not use this file except
 in compliance with the License.
 
 You can obtain a copy of the license at
 https://jwsdp.dev.java.net/CDDLv1.0.html
 See the License for the specific language governing
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 HEADER in each file and include the License file at
 https://jwsdp.dev.java.net/CDDLv1.0.html  If applicable,
 add the following below this CDDL HEADER, with the
 fields enclosed by brackets "[]" replaced with your
 own identifying information: Portions Copyright [yyyy]
 [name of copyright owner]
-->

<!-- $Id: build.xml,v 1.21 2006-01-30 04:27:42 kohsuke Exp $ -->
<project name="xjc" basedir=".." default="compile">

  <description>
    XJC Sub-Project
    ===============
    
    The xjc project contains all of the source code necessary to process
    schemas and binding customization files into java sources.
  </description>
  
    <!-- import build properties -->
    <property file="${basedir}/build.properties" />

    <!-- libraries that are referenced when compiling Java source files -->
    <path id="javac.classpath">
      <pathelement path="${codemodel.classes}" />
      <pathelement path="${runtime.classes}" />
      <pathelement path="${schemagen.classes}" />
      <fileset dir="${jaxb.libs.redist}" includes="*.jar"/>
      <fileset dir="${jaxb.libs.rebundle}" includes="**/*.jar"/>
      <!-- XJCTask depends on Ant. -->
      <fileset dir="${jaxb.libs.util}" includes="ant.jar"/>
      <!-- dependency on dom4j ??? -->  
      <pathelement path="${jaxb.libs.util}/dom4j.jar" />
      <pathelement path="${jaxb.libs.util}/jam.jar" />
      <pathelement path="${jaxb.libs.compiler}/txw2.jar" />
    </path>

    <path id="txw.classpath">
      <path refid="javac.classpath"/>
      <pathelement path="${jaxb.libs.compiler}/txw2.jar"/>
      <pathelement path="${jaxb.libs.util}/txwc2.jar"/>
      <pathelement path="${jaxb.libs.util}/commons-cli-1.0.jar"/>
      <pathelement path="${jaxb.libs.util}/rngom.jar"/>
    </path>

    <target name="init">
        <!-- this property is used by "xjc -version" and is also set in each of the
             generated ObjectFactory classes.  It should be set via the RE build
             scripts via 'ant -Dbuild.id="b08"' otherwise the current date and time
             will be used -->
        <tstamp>
            <format property="now" pattern="MM/dd/yyyy hh:mm aa" unit="hour"/>
        </tstamp>
        <property name="build.id" value="${now}(${user.name})" />
        <property name="build.version" value="${release.impl.version}-${build.id}-${release.impl.version.suffix}" />
        <echo message="The build id is: ${build.version}" />
        <ant dir="${jaxb.root}/tools/source-tidy" target="compile" />
    </target>

    <!-- check if RelaxNGCC needs to be run -->
    <target name="ngcc-check">
      <condition property="ngcc.notrequired">
        <uptodate
          targetfile="${xjc.src}/com/sun/tools/jxc/gen/config/Config.java">
          <srcfiles dir="${xjc.src}/com/sun/tools/jxc/gen/config" includes="config.rng"/>
        </uptodate>
      </condition>
    </target>
    
    <!-- run RELAXNGCC -->
    <target name="ngcc" 
            unless="ngcc.notrequired" 
            depends="ngcc-check">
      <mkdir dir="${xjc.gensrc}"/>

      <delete dir="${xjc.gensrc}/com/sun/tools/jxc/gen/config" />
      <mkdir  dir="${xjc.gensrc}/com/sun/tools/jxc/gen/config"/>
      <java classname="relaxngcc.RelaxNGCC" fork="true">
        <classpath refid="javac.classpath" />
        <classpath path="${jaxb.libs.util}/relaxngcc.jar"/>

        <!-- enable debug statements -->
        <!--arg value="-d"/-->

        <!-- specify output directory -->
        <arg value="--target"/>
        <arg path="${xjc.gensrc}/com/sun/tools/jxc/gen/config" />

        <!-- source file -->
        <arg path="${xjc.src}/com/sun/tools/jxc/gen/config/config.rng"/>
      </java>
    </target>

  <target name="annotation-writers"
          description="generate CodeModel typed annotation writers">
     <taskdef name="cac" classname="com.sun.codemodel.ac.ACTask">
       <classpath>
         <fileset dir="${codemodel.build}" includes="*.jar"/>
       </classpath>
     </taskdef>
     
     <mkdir dir="${xjc.gensrc}"/>
     <cac destdir="${xjc.gensrc}"
       package="com.sun.tools.xjc.generator.annotation.spec">
       <classes includes="javax.xml.bind.annotation.*"
                excludes="javax.xml.bind.annotation.XmlJavaTypeAdapter" />
       <classes includes="javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter" />
       <classpath>
         <pathelement path="${jaxb.libs.redist}/jaxb-api.jar"/>
       </classpath>
     </cac>
     <cac destdir="${xjc.gensrc}"
       package="com.sun.tools.xjc.generator.annotation.ri">
       <classes includes="com.sun.xml.bind.annotation.*"/>
       <classpath>
         <pathelement path="${runtime.classes}"/>
       </classpath>
     </cac>
  </target>

     <!-- compile Java source files -->
    <target name="compile"
            depends="init, ngcc, annotation-writers"
            description="compile all xjc src into jaxb-ri/xjc/build/classes">
        <!-- no way to 'depend' on codemodel and runtime targets, so just -->
        <!-- call the targets to make sure they are up to date            -->
        <ant target="compile" antfile="${codemodel.root}/build.xml" />
        <ant target="compile" antfile="${runtime.root}/build.xml" />

        <mkdir dir="${xjc.classes}" />

        <javac srcdir="${xjc.src}:${xjc.gensrc}" destdir="${xjc.classes}"
            debug="${compile.debug}" optimize="${compile.optimize}"
            deprecation="${compile.deprecation}" >
            <classpath refid="javac.classpath" />
        </javac>
        
        <javac srcdir="${xjc.root}/facade" destdir="${xjc.classes}"
               debug="${compile.debug}" optimize="${compile.optimize}"
               source="1.2" target="1.2">
            <classpath refid="javac.classpath" />
        </javac>

        <copy toDir="${xjc.classes}">
          <fileset dir="${xjc.src}" includes="**/*.purified.rng" />
          <fileset dir="${xjc.src}" includes="**/dtd/bindinfo/bindingfile.rng" />
          <fileset dir="${xjc.src}" includes="**/*.xsd" />
        </copy>
        
        <!-- always delete these prop files so that the latest build id can be set -->
        <delete file="${xjc.classes}/com/sun/tools/xjc/MessageBundle*.properties"/>

        <copy toDir="${xjc.classes}">
          <fileset dir="${xjc.src}" includes="**/*.properties" />
          <filterset begintoken="@@" endtoken="@@">
            <filter token="BUILD_VERSION" value="${build.version}"/>
            <filter token="JAXB_VERSION" value="${release.impl.version}"/>
          </filterset>
        </copy>
        
        <!-- clean up the xjc runtime java source code -->
        <java classname="SourceTidy">
          <classpath>
            <pathelement location="${jaxb.root}/tools/source-tidy"/>
          </classpath>
          <arg path="${xjc.classes}/com/sun/tools/xjc/runtime" />
        </java>
    </target>
    
    
    <target name="compile-xjc-test" 
            depends="compile"
	    description="compile xjc/test">
        <javac srcdir="${xjc.test}" destdir="${xjc.classes}"
            debug="${compile.debug}" optimize="${compile.optimize}">
            <classpath refid="javac.classpath" />
            <classpath path="${xjc.classes}" />
            <classpath path="${runtime.classes}"/>
            <classpath path="${spec.classes}"/>
            <classpath>
              <fileset dir="${jaxb.libs.util}" includes="*.jar" />
              <fileset dir="${jaxb.libs.test}" includes="*.jar" />
            </classpath>
        </javac>
    </target>
    
    
    
    <target name="run-xjc-test" depends="xjc-junit"
            description="execute xjc unit tests - requires junit.jar on system classpath"/>
    
    <!--
      run JUnit-based individual tests.
    -->
    <target name="xjc-junit"
            depends="compile-xjc-test"
            description="runs XJC JUnit tests">
      <junit printsummary="yes" fork="yes"
        haltonerror="no" haltonfailure="no">
        
        <formatter type="plain" />
        
        <classpath path="${java.class.path}" />
        <classpath refid="javac.classpath"/>
        <classpath path="${xjc.classes}"/>
        
        <batchtest todir="test/log">
          <fileset dir="${xjc.classes}" includes="**/*JUTest.class"/>
        </batchtest>
      </junit>
    </target>
    
    
    
    
    
    <path id="javadoc.classpath">
        <pathelement path="${xjc.classes}" />
        <pathelement path="${codemodel.classes}" />
        <pathelement path="${runtime.classes}" />
        <pathelement path="${schemagen.classes}" />
        <fileset dir="${jaxb.libs.redist}" includes="*.jar"/>
        <fileset dir="${jaxb.libs.rebundle}" includes="**/*.jar"/>
        <fileset dir="${jaxb.libs.util}" includes="*.jar"/>
    </path>

    
    <target name="javadoc" 
            description="generate javadoc for xjc into jaxb-ri/xjc/docs/api">
      <mkdir dir="${xjc.root}/build/javadoc" />
      <javadoc sourcepath="${xjc.src}"
            packagenames="com.*"
            destdir="${xjc.root}/build/javadoc"
            use="true"
            author="false"
            version="false"
            useexternalfile="true"
            windowtitle="XJC"
            doctitle="XJC"
            access="package">
        <classpath refid="javadoc.classpath" />
        <arg value="-quiet"/>
      </javadoc>
    </target>
    
    <target name="javadoc-xjc-api"
      description="Builds javadoc for the XJC API">
      <mkdir dir="docs" />
      <javadoc packagenames="com.sun.tools.xjc.api"
            locale="en_US"
            sourcepath="${xjc.src}"
            destdir="xjc/build/api-docs"
            use="true"
            useexternalfile="true"
            author="false"
            version="false"
            windowtitle="XJC API"
            doctitle="XJC API">
        <link href="http://kohsuke.sfbay/javadoc/docs/codemodel/" />
        <link href="http://kohsuke.sfbay/javadoc/docs/xsom/" />
        <link href="http://kohsuke.sfbay/javadoc/docs/jaxp-api/" />
        <link href="http://webwork.sfbay/j2se/1.4.2/docs/api/" />
      </javadoc>
    </target>
    

    <!-- remove all intermediate files -->
    <target name="clean"
            description="clean jaxb-ri/xjc/build">
      <!-- delete all RelaxNGCC-generated files -->
      <delete failonerror="false">
        <fileset dir="${xjc.src}/com/sun/tools/jxc/gen/config" includes="**/*.java"/>
      </delete>

      <delete dir="${xjc.root}/build" />

      <delete file="${xjc.root}/manifest.xjc" />
    </target>

</project>
